# Generates a self-booting image.

FEATURES {
    STARTADDRESS: default = $0800;
}
SYMBOLS {
    __DISKSIZE__:  type = weak, value = $23000; # 140K
    __SECTOR__:    type = weak, value = $100;
    __HIMEM__:     type = weak, value = $9600; # Presumed RAM end
    __LCADDR__:    type = weak, value = $D400; # Behind quit code
    __LCSIZE__:    type = weak, value = $0C00; # Rest of bank two
}
MEMORY {
    ZP:         file = "", define = yes, start = $0080,        size = $001A;
    # The sector(s) of the disk loaded by the monitor.
    BOOTSECTOR: file = %O, define = yes, start = %S, size = __SECTOR__, fill = yes;
    # Pad the output file out to 140K for emulators expecting a complete floppy image.
    DISK:       file = %O, define = yes, start = %S + __SECTOR__, size = __DISKSIZE__ - __SECTOR__, fill=yes;
    # The remaining memory exceeding the range which could be covered by a floppy.
    MAIN:       file = "", define = yes, start = %S + __SECTOR__, size = __HIMEM__ - __DISKSIZE__ + %S;

    LC:     file = "", define = yes, start = __LCADDR__,   size = __LCSIZE__;
}
SEGMENTS {
    ZEROPAGE: load = ZP,             type = zp;
    HEADER:   load = BOOTSECTOR,     type = ro;
    CODE:     load = BOOTSECTOR,     type = ro;
    RODATA:   load = BOOTSECTOR,     type = ro;
    DATA:     load = BOOTSECTOR,     type = rw;
    BSS:      load = MAIN,           type = bss;
    LC:       load = MAIN, run = LC, type = ro,  optional = yes;
}
